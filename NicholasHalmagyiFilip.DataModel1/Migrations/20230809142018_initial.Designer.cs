/*
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NicholasHalmagyiFilip.DataModel;

namespace NicholasHalmagyiFilip.DataModel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230809142018_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NicholasHalmagyiFilip.DataModel.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryDepotId")
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.HasIndex("CountryDepotId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("NicholasHalmagyiFilip.DataModel.Models.Depot", b =>
                {
                    b.Property<int>("DepotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepotName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepotId");

                    b.ToTable("Depots");
                });

            modelBuilder.Entity("NicholasHalmagyiFilip.DataModel.Models.DrugType", b =>
                {
                    b.Property<int>("DrugTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DrugTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DrugTypeId");

                    b.ToTable("DrugTypes");
                });

            modelBuilder.Entity("NicholasHalmagyiFilip.DataModel.Models.DrugUnit", b =>
                {
                    b.Property<int>("DrugUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DrugUnitDepotId")
                        .HasColumnType("int");

                    b.Property<int>("DrugUnitDrugTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DrugUnitPickNumber")
                        .HasColumnType("int");

                    b.HasKey("DrugUnitId");

                    b.HasIndex("DrugUnitDepotId");

                    b.HasIndex("DrugUnitDrugTypeId");

                    b.ToTable("DrugUnits");
                });

            modelBuilder.Entity("NicholasHalmagyiFilip.DataModel.Models.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<string>("SiteName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SiteId");

                    b.HasIndex("CountryCode");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("NicholasHalmagyiFilip.DataModel.Models.Country", b =>
                {
                    b.HasOne("NicholasHalmagyiFilip.DataModel.Models.Depot", "CountryDepot")
                        .WithMany("DepotCountries")
                        .HasForeignKey("CountryDepotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NicholasHalmagyiFilip.DataModel.Models.DrugUnit", b =>
                {
                    b.HasOne("NicholasHalmagyiFilip.DataModel.Models.Depot", "DrugUnitDepot")
                        .WithMany("DepotDrugUnits")
                        .HasForeignKey("DrugUnitDepotId");

                    b.HasOne("NicholasHalmagyiFilip.DataModel.Models.DrugType", "DrugUnitDrugType")
                        .WithMany()
                        .HasForeignKey("DrugUnitDrugTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NicholasHalmagyiFilip.DataModel.Models.Site", b =>
                {
                    b.HasOne("NicholasHalmagyiFilip.DataModel.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
*/